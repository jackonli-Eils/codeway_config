spring:     
  servlet:
    # 设置上传文件大小
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  # 如果没有aliyun oss 打开这个配置
  #  autoconfigure:
  #    exclude: cn.javaer.aliyun.spring.boot.autoconfigure.oss.OssAutoConfiguration
  boot:
    admin:
      client:
        url: http://localhost:9090
      context-path: /admin
      
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    database: MYSQL
    show-sql: true
    open-in-view: true
    hibernate:
    #  ddl-auto: none # 关闭每次启动自动删除表数据
      ddl-auto: update
    properties:
      hibernate.id.new_generator_mappings: true
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      # 禁用Session Metrics打印
      hibernate.generate_statistics: false
      # 运行程序会校验数据与数据库的字段类型是否相同，不同会报错。
      # hibernate.hbm2ddl.auto: validate
      hibernate: 
        dialect: org.hibernate.dialect.MySQL5Dialect

  datasource: # Druid连接池的配置信息
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://bj-cdb-b50en7ie.sql.tencentcdb.com:60895/madaoo?characterEncoding=utf-8&useSSL=false
    type: com.alibaba.druid.pool.DruidDataSource
    username: root  
    password: '{cipher}AQAzJiWdEIl+jevPfIKsQh3vvY28D8p+TgqDOsAWZaOrOsvfOQzbZnoaKx+rkSgZNFkIIUq37wXR+OZyMmi8JVM1PNJjGZsac1NBPVRzoXM9nD3YmME4vFR4GTjhZ1CAbJIClB0mOqXp9m7qco+/B33H2T2WEXAOMzICZluCGzeWDRBxJMsOY12fxKsMn/QBZmzay7F4jPqY4o/lr5ygggCKXYEdWM4SoTfRk+wZZk6p+rNLVMcnUxPv5/mk5OJN0HNhzeduFYR4dwtL+j1FbpphHvdQ0oqB+zAmF+tY55XNn4GevnolrRi9txJ0ptJgw/3L+XlMCGJnExjU2OfvxFOQioTOU1etW6hgXhWXZ/XRs1QPWgZo03G6mWsJAuPfoDo='
    initialSize: 10 # 池启动时创建的连接数量
    maxWait: 60000 # 配置获取连接等待超时的时间
    minIdle: 5 # 在不新建连接的条件下，池中保持空闲的最少连接数
    maxActive: 10 # 同一时间可以从池分配的最多连接数量。设置为0时表示无限制。
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    validationQuery: SELECT 1 FROM DUAL # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用
    filters: stat,wall # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    poolPreparedStatements: true # 打开PSCache，并且指定每个连接上PSCache的大小
    maxPoolPreparedStatementPerConnectionSize: 20 # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
    testOnBorrow: false # 取得连接时是否进行有效性验证（即是否还和数据库连通的）
    testWhileIdle: true # 连接空闲时是否进行有效性验证（即是否还和数据库连通的）
    minEvictableIdleTimeMillis: 300000 # 配置一个连接在池中最小生存的时间，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    testOnReturn: false # 返回连接时是否进行有效性验证（即是否还和数据库连通的）

    # 访问：http://localhost:port/domain/druid/login.html 进行登录访问。
    #   rabbitmq:
    #     host: 39.108.191.56
    #     username: admin
    #     password: admin
    #     port: 5672

  redis:
    host: 121.36.158.84
    port: 6379
    timeout: 90000
    password: '{cipher}AQBUHacsyC5ONHx5qLC0Cf6jGI+s1GwI3HGzc33tBuiVDZi59oH1U0+q8XMgOg2Ulc7qnoHM+h4gAbmlrnt5UN3oZCxGytnjFZXQeh4LyYnZlBqIVmVR+duJzOa1+NE8zBstN1p8Vrq1munnT8LqO+wy7bzuH8EhWmbRgkFfil04Em+nZ3BEapPdxHtRsY4eySjNV/rK65pVYSrw2mOVtDQ70WkFJdmiqSMNzAOPlmGmk/iUhQpxIy/AKbsimmFhsa/Crk5EpkpBplkmupyo/PliLjStW1pnPfSlDsTxSTl+veTyeyw9rQy/1l2h0bOa9S95JlGwI89xiZR5IEf5vCzRE7nv+KrQSqRmhUV5cXdn4aIYlW9ktYCT6sQQ7chru+o='

eureka:
  client: #客户端注册进eureka服务列表内
    service-url:
      #defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/
      defaultZone:  http://127.0.0.1:9009/eureka  #单机版
  instance:
    # 为注册的这个服务起个别名
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    prefer-ip-address: true     #使用ip进行注册
    # 注册中心跳转到swagger接口
    status-page-url-path:  /swagger-ui.html
    # #绑定客户端的ip而不是主机号
    hostname: ${spring.cloud.client.ip-address}   # ${spring.cloud.client.ip-address} 参考https://blog.csdn.net/xichenguan/article/details/76632033

# 暂无可用图床，自行对接图床
# 阿里云OSS对象存储，如果没有aliyun oss 注释这个配置
aliyun:
 oss:
   # 确认endpoint里面的请求地址跟bucket是否都一致。 https://mvp.aliyun.com/zhidao/9180
    endpoint: oss-cn-shanghai.aliyuncs.com
    access-key-id: LTAI4GEKJCtEQgJEKthv6RxG
    access-key-secret: '{cipher}AQAEXsD6bb8C5tWsX/gCA//gthigzDy6rMIppbnak2yvD1hCX7WCdD/1MeYjD1iVH4oOWbFEMwiCVN4dmj7Yg4amYxwn+CS5Ac0VOqoi1Xk18hGSywigHiPmJMB6MTjnC14miV1KA9C9jhdQNvcv0FKf+lu0UUxfh8Gzu6crTOA3OMXO9WgnWZ8EQo2NFyhnoybAvG9R02pCBw0pw7v0xc+vV29+CzBQvv4rtwRcz0zofkdTlFQK64t6qebOCmo5MfTIWbmXHfIvWa3uYFx7R6VANdIc7ID9f7D/I8zj7BhzPz03f7puXSQ3xJOM6YAyYz4MmLvCb/y2W0bkRV5woHNmLlJoE67NSk7nalzs0tT3lz8HL5NmtI+2TLHd/N5mWJ/JlnpKYnksxly4Y35fpBM+'
    
# 监控平台：include: "*"表示 暴露所有端点，info, health... 等等
management:
  health:
    rabbit:
      enabled: false
  endpoints:
    web:
      exposure:
        # *在YAML中有特殊的含义，所以如果你想包含（或排除）所有的端点，一定要加引号，如下例所示：
        include: "*"



### Hystrix 配置，解决Spring Cloud第一次调用失败
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            # 熔断器超时时间，默认：1秒
            timeoutInMilliseconds: 10000
ribbon:
  ReadTimeout: 60000
  ConnectTimeout: 60000
# 使用HTTP了client rpc调用
feign:
  hystrix:
    enabled: true

# feign请求打印日志
logging:
  level:
    com.madao.api: debug
